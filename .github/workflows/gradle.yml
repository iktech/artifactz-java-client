# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build

on:
  push:
    branches: [ '*' ]
    paths:
      - .github/workflows/gradle.yml
      - gradle/**/*
      - src/**/*
      - build.gradle.kts
      - gradle.properties
      - settings.gradle.kts
      - sonar-project.properties
  pull_request:
      branches: [ master ]
      paths:
        - .github/workflows/gradle.yml
        - gradle/**/*
        - src/**/*
        - build.gradle.kts
        - gradle.properties
        - settings.gradle.kts
        - sonar-project.properties

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build -PreadWriteToken="${{ secrets.READ_WRITE_ARTIFACTZ_TEST_TOKEN }}" -PreadOnlyToken="${{ secrets.READ_ONLY_ARTIFACTZ_TEST_TOKEN }}" -PwriteOnlyToken="${{ secrets.WRITE_ONLY_ARTIFACTZ_TEST_TOKEN }}"
      env:
        GPG_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
        GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: build/test-results/**/*.xml
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: JaCoCo Test Report
      run: ./gradlew jacocoTestReport
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
    - name: Scan current project
      uses: anchore/scan-action@v6
      with:
        path: "build/libs"
        fail-build: true
        severity-cutoff: high
        only-fixed: true
